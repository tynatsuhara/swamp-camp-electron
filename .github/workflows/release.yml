name: Release
on:
    workflow_call:
        inputs:
            dry-run:
                description: "Compiles the app but not upload artifacts to distribution server"
                default: false
                required: false
                type: boolean

concurrency:
    group: release-${{ github.ref }}
    cancel-in-progress: false

defaults:
    run:
        shell: "bash"

jobs:
    draft_release:
        strategy:
            fail-fast: false
            matrix:
                os: [windows-latest, ubuntu-latest, macos-latest]

        runs-on: ${{ matrix.os }}

        steps:
            - uses: actions/setup-node@v3
              with:
                  node-version: 16

            # check out main repo
            - uses: actions/checkout@v3
              with:
                  path: main

            - name: check out SWAMP CAMP
              uses: actions/checkout@v3
              with:
                  repository: ${{ secrets.SWAMP_CAMP_REPO }}
                  token: ${{ secrets.SWAMP_CAMP_ACCESS_TOKEN }}
                  path: swamp.camp

            - name: build SWAMP CAMP
              working-directory: ./swamp.camp
              run: |
                  npm install
                  npm run build:native

            - name: built native app
              working-directory: ./main
              run: |
                  npm install
                  npm run build

            - name: install flatpak dependencies
              run: sudo apt-get install -y flatpak flatpak-builder elfutils
              if: ${{ matrix.os == 'ubuntu-latest' }}

            - name: Compile artifacts ${{ inputs.dry-run && '' || 'and upload them to github release' }}
              working-directory: ./main
              run: npx --no-install electron-builder --config .electron-builder.config.js --publish ${{ inputs.dry-run && 'never' || 'always' }}
              env:
                  # Code Signing params
                  # See https://www.electron.build/code-signing
                  # CSC_LINK: ''
                  # CSC_KEY_PASSWORD: ''
                  # Publishing artifacts
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub token, automatically provided (No need to define this secret in the repo settings)
